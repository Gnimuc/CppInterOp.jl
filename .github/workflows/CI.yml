name: CI
on:
  push:
    branches:
      - main
    tags: ['*']
  pull_request:
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  test:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version: [nightly]
        include:
          - name: Ubuntu-22.04
            os: ubuntu-22.04
            arch: x64
          - name: Ubuntu-24.04
            os: ubuntu-24.04
            arch: x64        
          - name: Ubuntu-22.04-arm
            os: ubuntu-22.04-arm
            arch: arm64
          - name: Ubuntu-24.04-arm
            os: ubuntu-24.04-arm
            arch: arm64
          - name: MacOS-15
            os: macOS-15
            arch: arm64
          - name: MacOS-14
            os: macOS-14
            arch: arm64
          - name: Windows-2025
            os: windows-2025
            arch: x64
          - name: Windows-2022
            os: windows-2022
            arch: x64
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v4
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-

      - uses: julia-actions/julia-buildpkg@v1
      
      - name: Install MSYS2
        uses: msys2/setup-msys2@v2
        with:
          path-type: inherit
          install: mingw-w64-x86_64-gcc
        if: runner.os == 'Windows'

      - name: Build libCppInterOpExtra
        run: julia --project=deps deps/build_ci.jl
        if: runner.os != 'Windows'

      - name: Build libCppInterOpExtra (in msys2)
        shell: msys2 {0}
        run: julia --project=deps deps/build_ci.jl
        if: runner.os == 'Windows'

      - name: Setup SDKROOT on macOS
        run: echo "SDKROOT=$(xcrun --sdk macosx --show-sdk-path)" >> $GITHUB_ENV
        if : runner.os == 'macOS'

      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          file: lcov.info
